#Take values of docker image from task 2 with approriate version(dont include that last dot)
#Repository value from task 3

Docker_Image_and_Tag_Name="Inside this eg: valkyrie-app:v0.0.3"
REPOSITORY="Inside this you paste"
PROJECT_ID="Inside this"

Task 1 : 
#run one by one , only cat should be executed until eof

gcloud auth 

gsutil cat gs://cloud-training/gsp318/marking/setup_marking_v2.sh | bash

gcloud source repos clone valkyrie-app
cd valkyrie-app

cat > Dockerfile <<EOF
FROM golang:1.10
WORKDIR /go/src/app
COPY source .
RUN go install -v
ENTRYPOINT ["app","-single=true","-port=8080"]
EOF

docker build -t $Docker_Image_and_Tag_Name .

cd ..
cd marking
./step1_v2.sh

Task 2. Test the created Docker image

cd ..
cd valkyrie-app
docker run -p 8080:8080 $Docker_Image_and_Tag_Name &
cd ..
cd marking
./step2_v2.sh
bash ~/marking/step2_v2.sh


Task 3. Push the Docker image to the Artifact Registry

Change region everywhere ie around 4 times u have to change instead of us-central1 with region 


cd ..
cd valkyrie-app

gcloud artifacts repositories create $REPOSITORY \
    --repository-format=docker \
    --location=us-central1 \
    --description="subcribe to quciklab" \
    --async 

gcloud auth configure-docker us-central1-docker.pkg.dev
docker images

#Please noteï¼šReplace [IMAGE ID] with its value which you will get after executing above command 

docker tag [IMAGE ID] us-central1-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$Docker_Image_and_Tag_Name

docker push us-central1-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$Docker_Image_and_Tag_Name


Task 4. Create and expose a deployment in Kubernetes

sed -i s#IMAGE_HERE#us-central1-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$Docker_Image_and_Tag_Name#g k8s/deployment.yaml

#Search for kubernetes cluster in search bar and see zone and copy that (Paste the zone in next line instead of <zone>)

gcloud container clusters get-credentials valkyrie-dev --zone <zone>
kubectl create -f k8s/deployment.yaml
kubectl create -f k8s/service.yaml
